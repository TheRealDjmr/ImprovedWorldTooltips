<ls:UIWidget
    x:Name="WorldTooltips"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
    Template="{StaticResource Hud.Root}">

    <ls:UIWidget.ContentTemplate>
        <DataTemplate DataType="{x:Type ls:Widget}">
            <DataTemplate.Resources>
                <!-- IUI START - Custom animation -->
                <Storyboard x:Key="IUIScanningAnim" AutoReverse="True">
                    <DoubleAnimation
                        Duration="0:0:1"
                        Storyboard.TargetName="SpyglassBorder"
                        Storyboard.TargetProperty="Opacity"
                        To="0.1" />
                </Storyboard>
                <Storyboard x:Key="IUIIdleAnim">
                    <DoubleAnimation
                        Duration="0:0:0.1"
                        Storyboard.TargetName="SpyglassBorder"
                        Storyboard.TargetProperty="Opacity"
                        To="1" />
                </Storyboard>
                <Storyboard x:Key="IUIGamepadAnim" AutoReverse="True">
                    <DoubleAnimation
                        Duration="0:0:1"
                        Storyboard.TargetName="GamepadBorder"
                        Storyboard.TargetProperty="Opacity"
                        To="0.1" />
                </Storyboard>
                <!-- IUI END -->
                <DataTemplate x:Key="CommonTooltipTemplate">
                    <Canvas>
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="MouseEnter">
                                <b:InvokeCommandAction Command="{Binding DataContext.SetHoveredWorldTooltipCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding GameObject}" />
                            </b:EventTrigger>
                            <b:EventTrigger EventName="MouseLeave">
                                <b:InvokeCommandAction Command="{Binding DataContext.SetHoveredWorldTooltipCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="" />
                            </b:EventTrigger>
                            <b:EventTrigger EventName="MouseLeftButtonUp">
                                <b:InvokeCommandAction Command="{Binding DataContext.SelectWorldTooltipCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding GameObject}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                        <Border
                            Canvas.Left="-512"
                            Canvas.Top="-128"
                            Width="1024"
                            Height="512">
                            <ls:LSNineSliceImage
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Style="{StaticResource WorldTooltip9Slice}">
                                <b:Interaction.Behaviors>
                                    <ls:DragGameObjectBehavior GameObject="{Binding Item}" StartDragOffset="10" />
                                </b:Interaction.Behaviors>
                                <StackPanel Margin="6,-4,6,-6" VerticalAlignment="Center">
                                    <StackPanel.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                            <Setter Property="TextAlignment" Value="Center" />
                                            <Setter Property="FontSize" Value="{StaticResource ScaledMediumFontSize}" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                        <TextBlock
                                            x:Name="NameTxt"
                                            FontSize="{StaticResource MediumFontSize}"
                                            Foreground="{StaticResource TooltipColor.Title}"
                                            ls:TextBlockFormatter.SourceText="{Binding Name}"
                                            Visibility="{Binding Name, Converter={StaticResource StringToVisibilityConverter}}" />
                                        <TextBlock
                                            x:Name="ExtraInfo"
                                            Foreground="{StaticResource TooltipColor.Secondary}"
                                            Visibility="Collapsed" />
                                    </StackPanel>
                                    <TextBlock
                                        x:Name="DescriptionTxt"
                                        Foreground="{StaticResource TooltipColor.Primary}"
                                        ls:TextBlockFormatter.SourceText="{Binding Description}"
                                        Visibility="{Binding Description, Converter={StaticResource StringToVisibilityConverter}}" />
                                </StackPanel>
                            </ls:LSNineSliceImage>
                        </Border>
                    </Canvas>
                    <DataTemplate.Triggers>
                        <DataTrigger Value="True" Binding="{Binding IsStealing}">
                            <Setter TargetName="NameTxt" Property="Foreground" Value="{StaticResource LS_alertTxtColor}" />
                        </DataTrigger>
                        <DataTrigger Value="Uncommon" Binding="{Binding Item.Rarity}">
                            <Setter TargetName="NameTxt" Property="Foreground" Value="{StaticResource ItemRarityColour.Uncommon}" />
                        </DataTrigger>
                        <DataTrigger Value="Rare" Binding="{Binding Item.Rarity}">
                            <Setter TargetName="NameTxt" Property="Foreground" Value="{StaticResource ItemRarityColour.Rare}" />
                        </DataTrigger>
                        <DataTrigger Value="VeryRare" Binding="{Binding Item.Rarity}">
                            <Setter TargetName="NameTxt" Property="Foreground" Value="{StaticResource ItemRarityColour.VeryRare}" />
                        </DataTrigger>
                        <DataTrigger Value="Legendary" Binding="{Binding Item.Rarity}">
                            <Setter TargetName="NameTxt" Property="Foreground" Value="{StaticResource ItemRarityColour.Legendary}" />
                        </DataTrigger>
                        <DataTrigger Value="True" Binding="{Binding Item.IsStoryItem}">
                            <Setter TargetName="NameTxt" Property="Foreground" Value="{StaticResource LS_storyColor}" />
                        </DataTrigger>
                        <DataTrigger Value="Empty" Binding="{Binding ContainerState}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Value="NotExplored" Binding="{Binding ContainerState}">
                            <Setter TargetName="ExtraInfo" Property="Text" Value="*" />
                            <Setter TargetName="ExtraInfo" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </DataTemplate.Resources>

            <Grid>
                <!-- IUI START - show all items auto re-toggle -->
                <!-- Detects mouse movement, if there are no world items listed -->
                <Control
                    x:Name="WTCMouseInputChecker"
                    Opacity="1.0"
                    Visibility="Collapsed">
                    <Control.Template>
                        <ControlTemplate TargetType="Control">
                            <Border
                                Width="3840"
                                Height="2160"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Background="Transparent" />
                        </ControlTemplate>
                    </Control.Template>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="MouseEnter">
                            <b:InvokeCommandAction Command="{Binding SetShowWorldTooltipsCommand}" />
                            <b:ChangePropertyAction
                                TargetName="WTCMouseInputChecker"
                                Value="0.5"
                                PropertyName="Opacity" />
                        </b:EventTrigger>
                        <b:PropertyChangedTrigger Binding="{Binding ElementName=SpyglassHolder, Path=Opacity}">
                            <b:Interaction.Behaviors>
                                <b:ConditionBehavior>
                                    <b:ConditionalExpression>
                                        <b:ComparisonCondition
                                            LeftOperand="{Binding ElementName=WorldTooltipContainer, Path=HasItems}"
                                            Operator="Equal"
                                            RightOperand="True" />
                                    </b:ConditionalExpression>
                                </b:ConditionBehavior>
                            </b:Interaction.Behaviors>
                            <b:ChangePropertyAction
                                TargetName="WTCMouseInputChecker"
                                Value="1.0"
                                PropertyName="Opacity" />
                        </b:PropertyChangedTrigger>
                    </b:Interaction.Triggers>
                </Control>

                <!-- Detects gamepad, if there are no world items listed -->
                <Control
                    x:Name="WTCGamepadInputChecker"
                    Opacity="1.0"
                    Visibility="Collapsed">
                    <Control.Template>
                        <ControlTemplate TargetType="Control">
                            <Border
                                x:Name="GamepadBorder"
                                Width="50"
                                Height="50"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Bottom"
                                Background="Transparent" />
                        </ControlTemplate>
                    </Control.Template>
                    <b:Interaction.Triggers>
                        <b:DataTrigger Value="True" Binding="{Binding ElementName=WTCGamepadInputChecker, Path=IsVisible}">
                            <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource IUIGamepadAnim}" />
                        </b:DataTrigger>
                        <b:DataTrigger Value="False" Binding="{Binding ElementName=WTCGamepadInputChecker, Path=IsVisible}">
                            <b:ControlStoryboardAction ControlStoryboardOption="Stop" Storyboard="{Binding ElementName=GamepadBorder,Path=(b:Interaction.Triggers)[0].Actions[0].Storyboard}" />
                        </b:DataTrigger>
                        <b:StoryboardCompletedTrigger Storyboard="{StaticResource IUIGamepadAnim}">
                            <b:InvokeCommandAction Command="{Binding SetShowWorldTooltipsCommand}" />
                            <b:ChangePropertyAction
                                TargetName="WTCGamepadInputChecker"
                                Value="0.5"
                                PropertyName="Opacity" />
                        </b:StoryboardCompletedTrigger>
                        <b:PropertyChangedTrigger Binding="{Binding ElementName=SpyglassHolder, Path=Opacity}">
                            <b:Interaction.Behaviors>
                                <b:ConditionBehavior>
                                    <b:ConditionalExpression>
                                        <b:ComparisonCondition
                                            LeftOperand="{Binding ElementName=WorldTooltipContainer, Path=HasItems}"
                                            Operator="Equal"
                                            RightOperand="True" />
                                    </b:ConditionalExpression>
                                </b:ConditionBehavior>
                            </b:Interaction.Behaviors>
                            <b:ChangePropertyAction
                                TargetName="WTCGamepadInputChecker"
                                Value="1.0"
                                PropertyName="Opacity" />
                        </b:PropertyChangedTrigger>
                    </b:Interaction.Triggers>
                </Control>
                <!-- IUI END -->

                <!-- Show all the world tooltips for this player -->
                <ItemsControl
                    x:Name="WorldTooltipContainer"
                    IsHitTestVisible="True"
                    ItemsSource="{Binding CurrentPlayer.WorldTooltips}"
                    ItemTemplate="{StaticResource CommonTooltipTemplate}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ls:LSWorldTooltipsCanvas ClipToBounds="True" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="{Binding Position.X}" />
                            <Setter Property="Canvas.Top" Value="{Binding Position.Y}" />
                            <Setter Property="Canvas.ZIndex" Value="1" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Canvas.ZIndex" Value="1000" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>

                <!-- Indicates if "Show all items" is turned on, and scanning when no entries are showing -->
                <Grid
                    x:Name="SpyglassHolder"
                    Margin="120,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    Visibility="Collapsed">
                    <Border
                        x:Name="SpyglassBorder"
                        Width="120"
                        Height="120"
                        Background="Transparent"
                        Opacity="1">
                        <Image
                            x:Name="IconSpyglass"
                            Width="120"
                            Height="120"
                            Source="pack://application:,,,/GustavNoesisGUI;component/Assets/HUD/ico_spyglass.png" />
                    </Border>
                    <b:Interaction.Triggers>
                        <b:DataTrigger Value="0.5" Binding="{Binding ElementName=SpyglassHolder, Path=Opacity}">
                            <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource IUIScanningAnim}" />
                        </b:DataTrigger>
                        <b:DataTrigger Value="1" Binding="{Binding ElementName=SpyglassHolder, Path=Opacity}">
                            <b:ControlStoryboardAction ControlStoryboardOption="Stop" Storyboard="{Binding ElementName=SpyglassHolder,Path=(b:Interaction.Triggers)[0].Actions[0].Storyboard}" />
                            <b:ChangePropertyAction
                                TargetName="SpyglassBorder"
                                Value="1"
                                PropertyName="Opacity" />
                        </b:DataTrigger>
                        <b:StoryboardCompletedTrigger Storyboard="{StaticResource IUIScanningAnim}">
                            <b:InvokeCommandAction Command="{Binding SetShowWorldTooltipsCommand}" />
                            <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource IUIIdleAnim}" />
                        </b:StoryboardCompletedTrigger>
                        <b:StoryboardCompletedTrigger Storyboard="{StaticResource IUIIdleAnim}">
                            <b:Interaction.Behaviors>
                                <b:ConditionBehavior>
                                    <b:ConditionalExpression>
                                        <b:ComparisonCondition
                                            LeftOperand="{Binding ElementName=SpyglassHolder, Path=Opacity}"
                                            Operator="Equal"
                                            RightOperand="0.5" />
                                    </b:ConditionalExpression>
                                </b:ConditionBehavior>
                            </b:Interaction.Behaviors>
                            <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource IUIScanningAnim}" />
                        </b:StoryboardCompletedTrigger>
                        <b:EventTrigger EventName="MouseEnter">
                            <b:InvokeCommandAction Command="{Binding SetShowWorldTooltipsCommand}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Grid>

                <!-- controls toggle option for both keyboard and controller -->
                <ls:LSInputBinding
                    BoundEvent="ShowWorldTooltips"
                    EatInput="True"
                    IsEnabled="{Binding ElementName=SpyglassHolder, Path=IsVisible}">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="LSInputBindingPressed">
                            <b:ChangePropertyAction
                                TargetName="WorldTooltipContainer"
                                Value="Collapsed"
                                PropertyName="Visibility" />
                            <b:ChangePropertyAction
                                TargetName="SpyglassHolder"
                                Value="Collapsed"
                                PropertyName="Visibility" />
                            <b:InvokeCommandAction Command="{Binding SetShowWorldTooltipsCommand}" CommandParameter="{StaticResource FalseValue}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </ls:LSInputBinding>
                <ls:LSInputBinding
                    BoundEvent="ShowWorldTooltips"
                    EatInput="True"
                    IsEnabled="{Binding ElementName=SpyglassHolder, Path=IsVisible, Converter={StaticResource InvertBoolConverter}}">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="LSInputBindingPressed">
                            <b:ChangePropertyAction
                                TargetName="WorldTooltipContainer"
                                Value="Visible"
                                PropertyName="Visibility" />
                            <b:ChangePropertyAction
                                TargetName="SpyglassHolder"
                                Value="Visible"
                                PropertyName="Visibility" />
                            <b:InvokeCommandAction Command="{Binding SetShowWorldTooltipsCommand}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </ls:LSInputBinding>
            </Grid>
            <DataTemplate.Triggers>
                <!-- Enables/disables the mouse or zero item checks in place -->
                <DataTrigger Value="False" Binding="{Binding ElementName=SpyglassHolder, Path=IsVisible}">
                    <Setter TargetName="WTCMouseInputChecker" Property="Visibility" Value="Collapsed" />
                    <Setter TargetName="WTCGamepadInputChecker" Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                <!-- Move and clip Spyglass depending on controller type -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Value="Keyboard" Binding="{Binding DataContext.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" />
                        <Condition Value="False" Binding="{Binding CurrentPlayer.SelectedCharacter.IsInCamp}" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="SpyglassHolder" Property="Margin" Value="20,0,0,0" />
                        <Setter TargetName="SpyglassHolder" Property="Clip">
                            <Setter.Value>
                                <!-- Spyglass Rectangle - Keyboard -->
                                <RectangleGeometry Rect="0,0,120,120" />
                            </Setter.Value>
                        </Setter>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Value="Keyboard" Binding="{Binding DataContext.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" />
                        <Condition Value="True" Binding="{Binding CurrentPlayer.SelectedCharacter.IsInCamp}" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="SpyglassHolder" Property="Margin" Value="120,0,0,0" />
                        <Setter TargetName="SpyglassHolder" Property="Clip">
                            <Setter.Value>
                                <RectangleGeometry Rect="0,0,120,120" />
                            </Setter.Value>
                        </Setter>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <DataTrigger Value="Controller" Binding="{Binding DataContext.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                    <Setter TargetName="SpyglassHolder" Property="Margin" Value="0,0,0,0" />
                    <Setter TargetName="SpyglassHolder" Property="Clip">
                        <Setter.Value>
                            <!-- Spyglass Rectangle - Controller -->
                            <RectangleGeometry Rect="0,85,120,35" />
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <!-- Toggle Visibility and Opacity depending on what stage it's searching for items -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Value="True" Binding="{Binding ElementName=SpyglassHolder, Path=IsVisible}" />
                        <Condition Value="Keyboard" Binding="{Binding DataContext.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" />
                        <Condition Value="False" Binding="{Binding ElementName=WorldTooltipContainer, Path=HasItems}" />
                        <Condition Value="0.5" Binding="{Binding ElementName=WTCMouseInputChecker, Path=Opacity}" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="SpyglassHolder" Property="Opacity" Value="0.5" />
                        <Setter TargetName="WTCMouseInputChecker" Property="Visibility" Value="Collapsed" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Value="True" Binding="{Binding ElementName=SpyglassHolder, Path=IsVisible}" />
                        <Condition Value="Keyboard" Binding="{Binding DataContext.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" />
                        <Condition Value="False" Binding="{Binding ElementName=WorldTooltipContainer, Path=HasItems}" />
                        <Condition Value="1.0" Binding="{Binding ElementName=WTCMouseInputChecker, Path=Opacity}" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="WTCMouseInputChecker" Property="Visibility" Value="Visible" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Value="True" Binding="{Binding ElementName=WorldTooltipContainer, Path=HasItems}" />
                        <Condition Value="True" Binding="{Binding ElementName=SpyglassHolder, Path=IsVisible}" />
                        <Condition Value="Keyboard" Binding="{Binding DataContext.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="WTCMouseInputChecker" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="SpyglassHolder" Property="Opacity" Value="1.0" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Value="True" Binding="{Binding ElementName=SpyglassHolder, Path=IsVisible}" />
                        <Condition Value="Controller" Binding="{Binding DataContext.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" />
                        <Condition Value="False" Binding="{Binding ElementName=WorldTooltipContainer, Path=HasItems}" />
                        <Condition Value="0.5" Binding="{Binding ElementName=WTCGamepadInputChecker, Path=Opacity}" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="SpyglassHolder" Property="Opacity" Value="0.5" />
                        <Setter TargetName="WTCGamepadInputChecker" Property="Visibility" Value="Collapsed" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Value="True" Binding="{Binding ElementName=SpyglassHolder, Path=IsVisible}" />
                        <Condition Value="Controller" Binding="{Binding DataContext.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" />
                        <Condition Value="False" Binding="{Binding ElementName=WorldTooltipContainer, Path=HasItems}" />
                        <Condition Value="1.0" Binding="{Binding ElementName=WTCMouseInputChecker, Path=Opacity}" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="WTCGamepadInputChecker" Property="Visibility" Value="Visible" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Value="True" Binding="{Binding ElementName=SpyglassHolder, Path=IsVisible}" />
                        <Condition Value="Controller" Binding="{Binding DataContext.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" />
                        <Condition Value="True" Binding="{Binding ElementName=WorldTooltipContainer, Path=HasItems}" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="SpyglassHolder" Property="Opacity" Value="1.0" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </ls:UIWidget.ContentTemplate>
    <!-- IUI END -->
</ls:UIWidget>